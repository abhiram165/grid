{{- if .Values.routing.internal.enabled -}}
{{- $serviceName := .Values.service.name -}}
{{- $environment := .Values.environment -}}
{{- $port := .Values.service.externalPort -}}
{{- range $internalRoute := .Values.routing.internal.routes -}}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "internal-{{ $serviceName }}-{{ $internalRoute.slug }}"
spec:
  hosts:
  - "{{ $internalRoute.host }}"
  gateways:
  - "{{ $environment }}-internal-ingress-gateway"
  http:
  - match:
  {{- range $routingPath := $internalRoute.paths }}
    - uri:
        prefix: "/{{ $routingPath }}"
  {{- end }}
    route:
    - destination:
        host: "{{ $serviceName }}"
        port:
          number: {{ $port }}
    {{- if or (eq $.Values.rollout.strategy "blue_green") (and (eq $.Values.rollout.strategy "canary") (eq $.Values.rollout.canary.trafficSplitting "host_level")) }}
      weight: 100
    - destination:
        host: "{{ $serviceName }}-preview"
        port:
          number: {{ $port }}
      weight: 0
    {{- end }}
    {{- if and (eq $.Values.rollout.strategy "canary") (eq $.Values.rollout.canary.trafficSplitting "subset_level") }}
        subset: "stable-{{ $serviceName }}-subset"
      weight: 100
    - destination:
        host: "{{ $serviceName }}"
        port:
          number: {{ $port }}
        subset: "canary-{{ $serviceName }}-subset"
      weight: 0
    {{- end }}
---
{{- end }}
{{- end -}}